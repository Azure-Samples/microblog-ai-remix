name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  CONTAINER_APP_NAME: microblog-ai
  CONTAINER_APP_RESOURCE_GROUP: aswa-remix
  REGISTRY_NAME: microblogairegistry

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.1.1

      # Add Azure Login
      - name: Azure Login
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: docker/login-action@465a07811f14bebb1438181024f63163c1dae4d9
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Build and push Docker image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/microblog-ai:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Azure Login
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@8b255db282f6e6999b5ac16967445dfeb3492f5c
        with:
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.CONTAINER_APP_RESOURCE_GROUP }}
          imageToDeploy: ${{ secrets.REGISTRY_LOGIN_SERVER }}/microblog-ai:${{ github.sha }}
          targetPort: 3000
          ingress: external
          environmentName: env-microblog-ai
